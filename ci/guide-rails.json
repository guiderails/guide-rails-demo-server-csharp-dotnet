{
	"metadata": {
		"version": 2
	},
	"application": {
		"name": "netdemo-server",
		"language": "DOTNET",
		"artifact_store": {
			"type": "s3",
			"repositories": [
				{
					"category": "rc-packaging",
					"bucket": "guide-rails-calculi-rc"
				},
				{
					"category": "final-packaging",
					"bucket": "guide-rails-calculi-final"
				},
				{
					"category": "logs",
					"bucket": "guide-rails-calculi-logs"
				}
			]
		}
	},
	"pipeline": {
		"segments": [
			{
				"name": "Build",
				"segment_type": "build",
				"exit_actions": {
					"default": {
						"fetch_logs": true,
						"notifications": [
							{
								"type": "slack",
								"send_notification": true,
								"to": [
									"#gr-pipeline"
								],
								"message": "Segment Status"
							}
						],
						"code_analysis": {
							"publish": true,
							"properties": null
						},
						"delete_instances": true
					},
					"on_success": {
						"notifications": [
							{
								"type": "slack",
								"send_notification": true,
								"message": "Test message"
							}
						],
						"code_analysis": null
					},
					"on_failure": {
						"notifications": [
							{
								"type": "slack",
								"send_notification": true,
								"message": "Segment Failure"
							}
						],
						"code_analysis": null
					},
					"on_abort": {
						"notifications": [
							{
								"type": "slack",
								"send_notification": true,
								"message": "Segment Aborted"
							}
						],
						"code_analysis": null
					}
				},
				"deployment_strategy": {
					"canary_watch_time": "",
					"update_watch_time": "",
					"serial": false
				},
				"application_init": {},
				"packages": [
					{
						"name": "((application.name))",
						"downloads": [],
						"files": [
							"((application.name)).zip"
						]
					}
				],
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"post_deployment_actions": {
					"loadbalancer": {}
				},
				"cache_info": {},
				"tasks": [
					{
						"name": "netdemo-server",
						"steps": [
							{
								"name": "Restore",
								"definition": "Restore with nuget",
								"command": "nuget restore\ndir",
								"properties": null
							},
							{
								"name": "Build",
								"definition": "Build debug files",
								"command": "msbuild /t:Rebuild /p:Configuration=Debug",
								"properties": null
							},
							{
								"name": "Test",
								"definition": "Run Tests",
								"command": ".\\test.ps1",
								"properties": null
							},
							{
								"name": "Make Cobertura Report",
								"definition": "convert report to cobertura format",
								"command": ".\\makereport.ps1",
								"properties": null
							},
							{
								"name": "Package",
								"definition": "Pacakge as zip file",
								"command": ".\\package.ps1",
								"properties": null
							}
						]
					}
				]
			},
			{
				"name": "Integration",
				"segment_type": "integration",
				"run_after": [
					"Build"
				],
				"job_steps": [
					{
						"name": "Add Firewall Rule",
						"definition": "Add Firewall Rule",
						"command": "Import-Module NetSecurity\nNew-NetFirewallRule -Name netdemoport -DisplayName \"netdemo server port\" -Direction Inbound -Protocol TCP -LocalPort \"$env:DEMOSERVER_PORT\" -Action Allow",
						"properties": null
					},
					{
						"name": "Integration Tests",
						"definition": "Integration Tests",
						"command": ".\\ci\\integration-test.ps1",
						"properties": null
					},
					{
						"name": "jmeter",
						"definition": "jmeter",
						"command": "$ipa = (Get-NetIPConfiguration | Where-Object {$_.IPv4DefaultGateway -ne $null -and $_.NetAdapter.Status -ne \"Disconnected\"}).IPv4Address.IPAddress\n$env:Path += \";$env:PKG_BASE_DIR/jdk/openjdk/bin;$env:PKG_BASE_DIR/jmeter/bin\"\n$port = $env:DEMOSERVER_PORT\njmeter -Jip=\"$ipa\" -Jport=\"$port\" -n -t ci/pt.jmx -l $env:TEST_LOGS_DIR/results.jtl\n.\\ci\\validatept.ps1",
						"properties": null
					},
					{
						"name": "Server Machine",
						"definition": "Server Machine",
						"command": "Write-Host \"Server: $env:APPLICATION_NAME-$env:APPLICATION_BRANCH-$env:APPLICATION_SHORTSHA.server.consul\"",
						"properties": null
					}
				],
				"exit_actions": {
					"default": {
						"fetch_logs": true,
						"notifications": [
							{
								"type": "slack",
								"send_notification": true,
								"to": [
									"#gr-pipeline"
								],
								"message": "Segment Status"
							}
						],
						"code_analysis": {
							"properties": null
						},
						"delete_instances": true
					},
					"on_success": {
						"notifications": [
							{
								"type": "slack",
								"send_notification": true,
								"message": "Test message"
							}
						],
						"code_analysis": {
							"properties": null
						}
					},
					"on_failure": {
						"notifications": [
							{
								"type": "slack",
								"send_notification": true,
								"message": "Segment Failure"
							}
						],
						"code_analysis": {
							"properties": null
						}
					},
					"on_abort": {
						"notifications": [
							{
								"type": "slack",
								"send_notification": true,
								"message": "Segment Aborted"
							}
						],
						"code_analysis": {
							"properties": null
						}
					}
				},
				"properties": [
					{
						"name": "consul.servicename",
						"value": "((application.name))-((application.branch))-((application.shortsha))"
					}
				],
				"deployment_files": [
					{
						"source_path": "ci/start.ps1",
						"target_path": "ci/start.ps1"
					},
					{
						"source_path": "ci/stop.ps1",
						"target_path": "ci/stop.ps1"
					},
					{
						"source_path": "ci/integration-test.ps1",
						"target_path": "ci/integration-test.ps1"
					},
					{
						"source_path": "ci/validatept.ps1",
						"target_path": "ci/validatept.ps1"
					}
				],
				"deployment_strategy": {
					"canaries": 1,
					"max_in_flight": 1,
					"canary_watch_time": "60000-300000",
					"update_watch_time": "60000-300000",
					"serial": false
				},
				"application_init": {},
				"process": {
					"init": {}
				},
				"package_dependencies": [
					"((application.name))"
				],
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"instance_groups": [
					{
						"name": "((application.name))",
						"number_of_instances": 1,
						"cloud_provider_type": "aws",
						"cloud_provider_name": "guide-rails",
						"vm_type": "windows-small",
						"os_type": "windows2012R2",
						"networks": [
							"integration"
						],
						"availability_zones": [
							"default"
						],
						"deployment_strategy": {},
						"dependencies": [
							{
								"name": "bosh-dns-windows",
								"release": "bosh-dns-windows",
								"properties": [
									{
										"name": "address",
										"value": "((consul.joinservers))"
									}
								]
							},
							{
								"name": "consul-windows",
								"release": "consul-windows",
								"properties": [
									{
										"name": "consul.servicename",
										"value": "((consul.servicename))"
									},
									{
										"name": "consul.domain",
										"value": "((consul.domain))"
									},
									{
										"name": "consul.environment",
										"value": "((consul.environment))"
									},
									{
										"name": "consul.joinservers",
										"value": "((consul.joinservers))"
									},
									{
										"name": "consul.datacenter",
										"value": "((consul.datacenter))"
									},
									{
										"name": "calculi.intermediate.cert",
										"value": "grsecret:tls.cert"
									},
									{
										"name": "calculi.intermediate.key",
										"value": "grsecret:tls.key"
									},
									{
										"name": "consul.server",
										"value": "false"
									}
								]
							},
							{
								"name": "jmeter",
								"release": "jmeter",
								"properties": []
							},
							{
								"name": "enable_ssh",
								"release": "windows-utilities",
								"properties": []
							}
						]
					}
				],
				"post_deployment_actions": {
					"loadbalancer": {}
				},
				"deployment_target": 1,
				"releases": [
					{
						"name": "bosh-dns-windows",
						"version": "latest"
					},
					{
						"name": "consul-windows",
						"version": "latest"
					},
					{
						"name": "jmeter",
						"version": "latest"
					},
					{
						"name": "windows-utilities",
						"version": "latest"
					}
				]
			},
			{
				"name": "Production",
				"segment_type": "production",
				"persistent": true,
				"run_after": [
					"Integration"
				],
				"job_steps": [
					{
						"name": "Add Firewall Rule",
						"definition": "Add Firewall Rule",
						"command": "Import-Module NetSecurity\nNew-NetFirewallRule -Name netdemoport -DisplayName \"netdemo server port\" -Direction Inbound -Protocol TCP -LocalPort \"$env:DEMOSERVER_PORT\" -Action Allow",
						"properties": null
					},
					{
						"name": "jmeter",
						"definition": "jmeter",
						"command": "$ipa = \"netdemo-server.service.consul\"\n$env:Path += \";$env:PKG_BASE_DIR/jdk/openjdk/bin;$env:PKG_BASE_DIR/jmeter/bin\"\n$port = $env:DEMOSERVER_PORT\njmeter -Jip=\"$ipa\" -Jport=\"$port\" -n -t ci/pt.jmx -l $env:TEST_LOGS_DIR/results.jtl\n.\\ci\\validatept.ps1",
						"properties": null
					}
				],
				"exit_actions": {
					"default": {
						"fetch_logs": true,
						"notifications": [
							{
								"type": "slack",
								"send_notification": true,
								"to": [
									"#gr-pipeline"
								],
								"message": "Segment Status"
							}
						],
						"code_analysis": {
							"properties": null
						},
						"delete_instances": true
					},
					"on_success": {
						"notifications": [
							{
								"type": "slack",
								"send_notification": true,
								"message": "Test message"
							}
						],
						"code_analysis": {
							"properties": null
						}
					},
					"on_failure": {
						"notifications": [
							{
								"type": "slack",
								"send_notification": true,
								"message": "Segment Failure"
							}
						],
						"code_analysis": {
							"properties": null
						}
					},
					"on_abort": {
						"notifications": [
							{
								"type": "slack",
								"send_notification": true,
								"message": "Segment Aborted"
							}
						],
						"code_analysis": {
							"properties": null
						}
					}
				},
				"properties": [
					{
						"name": "consul.environment",
						"value": "PROD"
					}
				],
				"deployment_strategy": {
					"canaries": 1,
					"max_in_flight": 1,
					"canary_watch_time": "60000-300000",
					"update_watch_time": "60000-300000",
					"serial": false
				},
				"application_init": {},
				"process": {
					"init": {}
				},
				"package_dependencies": [
					"((application.name))"
				],
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"instance_groups": [
					{
						"name": "((application.name))",
						"number_of_instances": 3,
						"cloud_provider_type": "aws",
						"cloud_provider_name": "guide-rails",
						"vm_type": "windows-medium",
						"os_type": "windows2012R2",
						"networks": [
							"production"
						],
						"availability_zones": [
							"default"
						],
						"deployment_strategy": {},
						"dependencies": [
							{
								"name": "bosh-dns-windows",
								"release": "bosh-dns-windows",
								"properties": [
									{
										"name": "address",
										"value": "((consul.joinservers))"
									}
								]
							},
							{
								"name": "consul-windows",
								"release": "consul-windows",
								"properties": [
									{
										"name": "consul.servicename",
										"value": "((consul.servicename))"
									},
									{
										"name": "consul.domain",
										"value": "((consul.domain))"
									},
									{
										"name": "consul.environment",
										"value": "((consul.environment))"
									},
									{
										"name": "consul.joinservers",
										"value": "((consul.joinservers))"
									},
									{
										"name": "consul.datacenter",
										"value": "((consul.datacenter))"
									},
									{
										"name": "calculi.intermediate.cert",
										"value": "grsecret:tls.cert"
									},
									{
										"name": "calculi.intermediate.key",
										"value": "grsecret:tls.key"
									},
									{
										"name": "consul.server",
										"value": "false"
									}
								]
							},
							{
								"name": "jmeter",
								"release": "jmeter",
								"properties": []
							}
						]
					}
				],
				"post_deployment_actions": {
					"loadbalancer": {}
				},
				"deployment_target": 1,
				"releases": [
					{
						"name": "bosh-dns-windows",
						"version": "latest"
					},
					{
						"name": "consul-windows",
						"version": "latest"
					},
					{
						"name": "jmeter",
						"version": "latest"
					}
				]
			}
		],
		"exit_actions": {
			"default": {
				"fetch_logs": true,
				"notifications": [
					{
						"type": "slack",
						"send_notification": true,
						"to": [
							"#gr-pipeline"
						],
						"message": "Segment Status"
					}
				],
				"code_analysis": {
					"publish": true,
					"properties": null
				},
				"delete_instances": true
			},
			"on_success": {
				"notifications": [
					{
						"type": "slack",
						"send_notification": true,
						"message": "Test message"
					}
				],
				"code_analysis": {
					"properties": null
				}
			},
			"on_failure": {
				"notifications": [
					{
						"type": "slack",
						"send_notification": true,
						"message": "Segment Failure"
					}
				],
				"code_analysis": {
					"properties": null
				}
			},
			"on_abort": {
				"notifications": [
					{
						"type": "slack",
						"send_notification": true,
						"message": "Segment Aborted"
					}
				],
				"code_analysis": {
					"properties": null
				}
			}
		},
		"default_properties": [
			{
				"name": "additional_properties_file",
				"value": "local-sonar-project.properties",
				"type": "string"
			},
			{
				"name": "consul.servicename",
				"value": "((application.name))",
				"type": "string"
			},
			{
				"name": "consul.tag",
				"value": "((application.shortsha))",
				"type": "string"
			},
			{
				"name": "demoserver.port",
				"value": 8080,
				"type": "number"
			},
			{
				"name": "performanice.limit",
				"value": 60,
				"type": "number"
			},
			{
				"name": "source_dirs",
				"value": ".gitignore",
				"type": "string"
			}
		],
		"deployment_files": [
			{
				"source_path": "ci/start.ps1",
				"target_path": "ci/start.ps1"
			},
			{
				"source_path": "ci/stop.ps1",
				"target_path": "ci/stop.ps1"
			},
			{
				"source_path": "ci/service_registry.erb",
				"target_path": "ci/service-registry.json"
			},
			{
				"source_path": "ci/validatept.ps1",
				"target_path": "ci/validatept.ps1"
			},
			{
				"source_path": "ci/integration-test.ps1",
				"target_path": "ci/integration-test.ps1"
			},
			{
				"source_path": "netdemo-Server/pt.jmx",
				"target_path": "ci/pt.jmx"
			}
		],
		"application_init": {},
		"process": {
			"init": {
				"command": "ci/start.ps1"
			},
			"stop": {
				"command": [
					"ci/stop.ps1"
				]
			},
			"name": "netdemo-server"
		}
	},
	"organization": {
		"orgname": "Onboarding-Demo"
	}
}